cmake_minimum_required(VERSION 3.10)

project(DetectItEasy)

if(WIN32)
    set (CMAKE_PREFIX_PATH "C:/Qt/5.15.2/msvc2019/")
endif()

if(APPLE)
    set (CMAKE_PREFIX_PATH $ENV{HOME}/Qt/5.15.2/clang_64/)
    set (CMAKE_OSX_ARCHITECTURES x86_64)
    add_compile_options(-Wno-deprecated-declarations)
    add_compile_options(-Wno-switch)
endif()

add_subdirectory(XCppfilt XCppfilt)
add_subdirectory(XCapstone XCapstone)
add_subdirectory(XCapstone/x86 x86)
add_subdirectory(XArchive XArchive)
add_subdirectory(XYara XYara)
add_subdirectory(gui_source)
add_subdirectory(console_source)
add_subdirectory(lite_source)

include(GNUInstallDirs)

if(WIN32)
    install (TARGETS die)
    install (TARGETS diec)
    install (TARGETS diel)
endif()

if(CMAKE_SYSTEM_NAME MATCHES "Linux")
    install (TARGETS die LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})
    install (TARGETS diec LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})
    install (TARGETS diel LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})
    install (FILES LINUX/io.github.horsicq.detect-it-easy.metainfo.xml DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/metainfo)
    install (FILES LINUX/io.github.horsicq.detect-it-easy.desktop DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/applications/)
    install (DIRECTORY LINUX/hicolor DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/icons)
    install (DIRECTORY XStyles/qss DESTINATION ${CMAKE_INSTALL_LIBDIR}/die)
    install (DIRECTORY XInfoDB/info DESTINATION ${CMAKE_INSTALL_LIBDIR}/die)
    install (DIRECTORY Detect-It-Easy/db DESTINATION ${CMAKE_INSTALL_LIBDIR}/die)
    install (DIRECTORY XYara/yara_rules DESTINATION ${CMAKE_INSTALL_LIBDIR}/die)
    install (DIRECTORY images DESTINATION ${CMAKE_INSTALL_LIBDIR}/die)
endif()
