function detect(){if(32<=Binary.getSize())if(Binary.compare("'IDA'..0000")&&Binary.compare("DDCCBBAA",26)){var e=Binary.read_uint16(30)
switch(sVersion=e+".0",Binary.getString(0,4)){case"IDA0":bDetected=!0,sName="IDA Database (.IDB)"
break
case"IDA1":bDetected=!0,sName="IDA Database for 32-bit binary (.IDB)"
break
case"IDA2":bDetected=!0,sName="IDA Database for 64-bit binary (.I64)"}if(bDetected)switch(e){case 2:case 3:case 4:detect_zlib(Binary,Binary.read_uint32(6)+5)
break
case 5:case 6:detect_zlib(Binary,Binary.read_uint32(6)+9)}}else{var a,i,r
Binary.compare("'IDASGN'")?(bDetected=!0,sName="IDA FLIRT Signature Database (.SIG)",e=Binary.read_uint8(6),a=Binary.read_uint16(18),Binary.read_uint8(16),i=Binary.read_uint8(34),r=37,sVersion="v"+e,a||(a=Binary.read_uint32(37),r+=4,10<=e&&(r+=4)),sOptions='"'+Binary.getString(r,i)+'"',Binary.isVerbose()&&(detect_zlib(Binary,r+i),sOption("modules:"+a),sOption("p:"+Binary.read_uint8(7)),sOption("a:"+Binary.read_uint16(14)),sOption("o:"+Binary.read_uint16(12)),sOption("f:"+Binary.read_uint32(8)))):Binary.compare("'IDATIL'")&&(bDetected=!0,sName="IDA Type Information List (.TIL)",sOptions='"'+Binary.getString(15,Binary.read_uint8(14))+'"')}return result()}init("format",""),includeScript("zlib")
