function detect(){var e=[]
return e.BASE=e.cmap=e.DSIG=e.EBDT=e.Feat=e.FFTM=e.GDEF=e.GPOS=e.GSUB=e.LTSH=e["OS/2"]=1,Binary.compare("950412de00000000")||Binary.compare("de12049500000000")?(sName="GNU Gettext Machine Object (.MO)",bDetected=!0):e[Binary.getString(12,4)]?(sName="TrueType font (.TTF)",bDetected=!0):Binary.compare("f702018392c01c3b")?(sName="Device Independent Document (.DVI)",bDetected=!0):Binary.compare("31be000000ab0000")||Binary.compare("32be000000ab0000")?(sName="Windows Write document (.WRI)",bDetected=!0):Binary.compare("'MICROSOFT PIFEX'0087010000",369)?(sName="Microsoft Program Information (.PIF)",bDetected=!0):Binary.compare("4c0000000114020000000000c000000000000046")?(sName="Windows Shortcut (.LNK)",bDetected=!0):Binary.compare("'Zinc Data File Version'")?(sName="Zinc Data (.DAT)",bDetected=!0):Binary.compare("00010000'Jet System DB  '00")?(sName="Microsoft Access Workgroup Information (.MDW)",bDetected=!0):Binary.compare("dca5..00..................00000000")||Binary.compare("eca5c100..................00000000")?(sName="Microsoft Word 2 document",bDetected=!0):Binary.compare("'OTTO'................'CFF '")?(sName="OpenType - CFF compact font (.OTF)",bDetected=!0):Binary.compare("3cb86418caef9c95")?(sName="Qt Message (.QM)",bDetected=!0):Binary.compare("'SIB file: TsiLang binary translation data'")?(sName="TsiLang binary translation data (.SIB)",bDetected=!0):Binary.compare("......00..........000200")&&Binary.compare("00'LP'",33)?(sName="Embedded OpenType font (.EOT)",bDetected=!0):Binary.compare("d4c3b2a1020004")?(sName="TCPDUMP's style capture (.ACP/PCAP)",bDetected=!0):Binary.compare("'HSP'")?(sName="OS/2 help file",bDetected=!0):Binary.compare("'LN'0200")?(sName="Quick Help",bDetected=!0):Binary.compare("'MZIP'")?(sName="MZIP archive",bDetected=!0):Binary.compare("'Kaydara FBX Binary  '00")?(sName="Kaydara FBX Binary (.FBX)",sVersion=Binary.read_uint16(23),bDetected=!0):Binary.compare("89'FCP'0D0A1A0A")?(sName="High-Logic FontCreator Project (.FCP)",sVersion=Binary.read_uint16(8)+"."+Binary.read_uint16(10),e=20+17*Binary.read_uint32(16)+12,detect_zlib(Binary,e),bDetected=!0):Binary.compare("'XALZ'")&&(sName="Xamarin Compressed DLL",sOptions=sOptions.append("LZ4 compression","Index:"+Binary.read_uint32(4),"Original size:"+Binary.read_uint32(8)),bDetected=!0),result()}init("format",""),includeScript("zlib")
