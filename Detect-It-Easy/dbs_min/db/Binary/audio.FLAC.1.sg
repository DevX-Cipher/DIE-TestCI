function detect(){if(File.compare("'fLaC'")){for(end=0,p=4,hk=hks=malformed="",ch=rate=bps=smp=smplen=sz=xa=xna=0,seekt=-1;!end&&p<File.getSize();){if(t=File.read_uint8(p),5==p&&255&t)return
switch(last=128&t,mdbt=127&t,mdsz=File.read_uint24(p+1,_BE),p+=4,mdbt){case 0:hk="STREAMINFO",minb=File.read_uint16(p,_BE),maxb=File.read_uint16(p+2,_BE),minf=File.read_uint24(p+4,_BE),maxf=File.read_uint24(p+7,_BE),(minb<16||65535<maxb||minb>maxb)&&(malformed+="!badblksz"),br=new BitReader(p+10,_BE),rate=br.read(20),ch=1+br.read(3),bps=1+br.read(5),smp=br.read(36),smplen=smp/rate
break
case 1:hk="PADDING"
break
case 2:switch(hk="APP",s=File.read_ansiString(p,4)){case"ATCH":hk+=":Flacfile"
break
case"BSOL":hk+=":beSolo"
break
case"BUGS":hk+=":Bugs Player"
break
case"Cues":hk+=":GoldWave"
break
case"Fica":hk+=":CUE Splitter"
break
case"Ftol":hk+=":flac-tools"
break
case"MOTB":hk+=":MOTB MetaCzar"
break
case"MPSE":hk+=":MP3 Stream Editor"
break
case"MuML":hk+=":MusicML"
break
case"RIFF":hk+=":Sound Devices RIFF c.s"
break
case"SFFL":hk+=":Sound Font FLAC"
break
case"SONY":hk+=":Sony Creative Software"
break
case"SQEZ":hk+=":flacsqueeze"
break
case"TtWv":hk+=":TwistedWave"
break
case"UITS":hk+=":UITS Embedding tools"
break
case"aiff":hk+=":FLAC AIFF c.s"
break
case"imag":hk+=":flac-image file"
break
case"peem":hk+=":Parseable Embedded Extensible Metadata"
break
case"qfst":hk+=":QFLAC Studio"
break
case"riff":hk+=":FLAC RIFF c.s (OpenMPT?)"
break
case"tune":hk+=":TagTuner"
break
case"w64 ":hk+=":FLAC Wave64 chunks"
break
case"xbat":hk+=":XBAT"
break
case"xbat":hk+=":xmcd"
break
default:hk+=":<"+s+">"}break
case 3:hk="SEEKTABLE",seekt=p,hk+="#"+Math.floor(mdsz,18)
break
case 4:hk="VORBIS_COMMENT"
break
case 5:for(hk="CUESHEET",xa=xna=0,trkn=File.read_uint8(p+395),u=p+396,i=0;i<trkn;i++)u+=21,128&File.read_uint8(u++)?xna++:xa++,u=(u+=13)+12*File.read_uint8(u++)
break
case 6:hk="PICTURE"
break
case 127:end=1,hk="frames"
break
default:hk="unknown"+Hex(mdbt)}"frames"!=hk&&(hks=hks.append("["+hk+"]")),p+=mdsz,last&&(end=1)}if(sz<p&&(sz=p),t=p+(smp*bps*ch>>3),sz<t&&(sz=t),_log("t:"+t),0<=seekt)for(i=0;i<mdsz/18;i++)smpn=File.read_uint64(seekt+18*i,_BE),seek=p+File.read_uint64(seekt+8+18*i,_BE),st=seek+(File.read_uint16(seekt+16+18*i,_BE)*bps*ch>>3),sz<st&&(sz=st)
if(end=0,!smp&&File.isDeepScan())for(;!end&&p<File.getSize();)end=1
return""!=malformed&&(sVersion+=malformed),bDetected=1,Binary.isVerbose()&&(sOption(Math.floor(smplen/60)+":"+(Math.floor(smplen)%60).padStart(2,"0")),(1<xa||xna)&&sOption("x"+xa+"+"+xna),sOption(hks),sOption(rate+"Hz ch:"+ch+" bps:"+bps),minb===maxb)&&sOption("fixed-size stream"),result()}}init("audio","FLAC waveform audio (.FLAC)")
